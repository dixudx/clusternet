/*
Copyright The Clusternet Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	appsv1alpha1 "github.com/clusternet/clusternet/pkg/apis/apps/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// BaseLister helps list Bases.
// All objects returned here must be treated as read-only.
type BaseLister interface {
	// List lists all Bases in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*appsv1alpha1.Base, err error)
	// Bases returns an object that can list and get Bases.
	Bases(namespace string) BaseNamespaceLister
	BaseListerExpansion
}

// baseLister implements the BaseLister interface.
type baseLister struct {
	listers.ResourceIndexer[*appsv1alpha1.Base]
}

// NewBaseLister returns a new BaseLister.
func NewBaseLister(indexer cache.Indexer) BaseLister {
	return &baseLister{listers.New[*appsv1alpha1.Base](indexer, appsv1alpha1.Resource("base"))}
}

// Bases returns an object that can list and get Bases.
func (s *baseLister) Bases(namespace string) BaseNamespaceLister {
	return baseNamespaceLister{listers.NewNamespaced[*appsv1alpha1.Base](s.ResourceIndexer, namespace)}
}

// BaseNamespaceLister helps list and get Bases.
// All objects returned here must be treated as read-only.
type BaseNamespaceLister interface {
	// List lists all Bases in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*appsv1alpha1.Base, err error)
	// Get retrieves the Base from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*appsv1alpha1.Base, error)
	BaseNamespaceListerExpansion
}

// baseNamespaceLister implements the BaseNamespaceLister
// interface.
type baseNamespaceLister struct {
	listers.ResourceIndexer[*appsv1alpha1.Base]
}
